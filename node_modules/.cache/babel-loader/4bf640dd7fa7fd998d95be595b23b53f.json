{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/app/users/add/UserAddComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { TextField } from \"formik-material-ui\";\nimport { ENV } from \"../../../constants\";\nimport CommonService from \"../../../helpers/common-service\";\nimport \"./UserAddComponent.scss\";\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\nconst formValidation = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  phone: Yup.string().min(10, 'Invalid Phone Number').max(10, 'Invalid Phone Number').matches(isPhone, 'Phone number is not valid').required('Required'),\n  name: Yup.string().min(4, \"Invalid name\").max(100, \"Invalid name\").test('alphabets', 'Name must only contain alphabets', value => {\n    return /^[a-zA-Z0-9\\s]+$/.test(value);\n  }).required(\"Required\"),\n  position: Yup.string().min(4, \"Invalid position\").max(100, \"Invalid position\").test('alphabets', 'Name must only contain alphabets', value => {\n    return /^[a-zA-Z0-9\\s]+$/.test(value);\n  }).required(\"Required\")\n});\n\nconst UserAddComponent = props => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = React.useState();\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const afterCancel = props === null || props === void 0 ? void 0 : props.cancel;\n  const afterConfirm = props === null || props === void 0 ? void 0 : props.confirm;\n\n  const onAdd = (payload, _ref) => {\n    let {\n      setSubmitting,\n      setErrors,\n      resetForm\n    } = _ref;\n    payload.image = selectedFile;\n    console.log(payload);\n    const formData = new FormData();\n    formData.append('name', payload.name);\n    formData.append('image', payload.image);\n    formData.append('email', payload.email);\n    formData.append('phone', payload.phone);\n    formData.append('position', payload.position);\n    console.log(formData);\n    console.log(formData.get(\"name\"));\n\n    CommonService._api.post(ENV.API_URL + 'candidate', formData, {\n      'content-type': 'multipart/form-data'\n    }).then(resp => {\n      setSubmitting(false);\n\n      if (afterConfirm) {\n        afterConfirm();\n        resetForm({});\n      }\n    }).catch(err => {\n      CommonService.handleErrors(setErrors, err);\n      setSubmitting(false);\n    });\n  };\n\n  const cancel = resetForm => {\n    if (afterCancel) {\n      afterCancel();\n      resetForm();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-add\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-title\",\n      children: 'Add Candidate Details'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        name: '',\n        phone: \"\",\n        position: \"\",\n        image: \"\"\n      },\n      validateOnChange: true,\n      validationSchema: formValidation,\n      onSubmit: onAdd,\n      children: _ref2 => {\n        let {\n          isSubmitting,\n          isValid,\n          resetForm\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: 'form-holder',\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Full Name', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                type: 'text',\n                component: TextField,\n                variant: \"outlined\",\n                id: \"input_user_add_full_name\",\n                color: \"primary\",\n                className: \"search-cursor\",\n                inputProps: {\n                  maxLength: 100\n                },\n                placeholder: 'Enter Full Name',\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Phone Number', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"phone\",\n                type: 'string',\n                component: TextField,\n                variant: \"outlined\",\n                color: \"primary\",\n                className: \"search-cursor\",\n                inputProps: {\n                  maxLength: 10\n                },\n                autoComplete: \"off\",\n                id: \"input_user_add_phone\",\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"+91\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this)\n                },\n                placeholder: '8888888888'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Email ID', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: 'email',\n                component: TextField,\n                variant: \"outlined\",\n                id: \"input_user_add_email\",\n                color: \"primary\",\n                className: \"search-cursor\",\n                inputProps: {\n                  maxLength: 100\n                },\n                placeholder: 'test@gmail.com',\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Position', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"position\",\n                type: 'text',\n                component: TextField,\n                variant: \"outlined\",\n                id: \"input_user_position\",\n                color: \"primary\",\n                className: \"search-cursor\",\n                inputProps: {\n                  maxLength: 100\n                },\n                placeholder: 'Enter position',\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-icon mrg-top-20\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: 'Upload Image'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"margin-top\",\n                id: \"file_Upload_Image\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"file\",\n                  onChange: event => changeHandler(event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => cancel(resetForm),\n              color: \"secondary\",\n              id: \"btn_user_add_cancel\",\n              children: 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"submit\",\n              disabled: isSubmitting || !isValid,\n              variant: \"contained\",\n              color: \"secondary\",\n              autoFocus: true,\n              id: \"btn_user_add_submit\",\n              children: 'ADD Candidate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 60\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserAddComponent, \"jPQrR1zmd6KNeaFjr8srpdEnNAQ=\");\n\n_c = UserAddComponent;\nexport default UserAddComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAddComponent\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/app/users/add/UserAddComponent.tsx"],"names":["Button","DialogActions","DialogContent","DialogTitle","React","Yup","Field","Form","Formik","FormLabel","TextField","ENV","CommonService","InputAdornment","isPhone","RegExp","formValidation","object","email","string","required","phone","min","max","matches","name","test","value","position","UserAddComponent","props","selectedFile","setSelectedFile","useState","changeHandler","event","target","files","afterCancel","cancel","afterConfirm","confirm","onAdd","payload","setSubmitting","setErrors","resetForm","image","console","log","formData","FormData","append","get","_api","post","API_URL","then","resp","catch","err","handleErrors","isSubmitting","isValid","maxLength","startAdornment"],"mappings":"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","sourcesContent":["import { Button, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport React,{PropsWithChildren,useState,useEffect,useCallback} from 'react';\r\nimport * as Yup from \"yup\";\r\nimport { Field, Form, Formik, FormikHelpers } from \"formik\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport { ENV } from \"../../../constants\";\r\nimport CommonService from \"../../../helpers/common-service\";\r\nimport \"./UserAddComponent.scss\"\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\r\n\r\nconst formValidation = Yup.object({\r\n    email: Yup.string().email('Invalid email address').required('Required'),\r\n    phone: Yup.string().min(10, 'Invalid Phone Number').max(10, 'Invalid Phone Number').matches(isPhone, 'Phone number is not valid').required('Required'),\r\n    name: Yup.string().min(4, \"Invalid name\").max(100, \"Invalid name\").test('alphabets', 'Name must only contain alphabets', (value: any) => {\r\n        return /^[a-zA-Z0-9\\s]+$/.test(value);\r\n    }).required(\"Required\"),\r\n    position: Yup.string().min(4, \"Invalid position\").max(100, \"Invalid position\").test('alphabets', 'Name must only contain alphabets', (value: any) => {\r\n        return /^[a-zA-Z0-9\\s]+$/.test(value);\r\n    }).required(\"Required\"),\r\n})\r\n\r\nexport interface UserAddComponentProps {\r\n    cancel: () => void,\r\n    confirm: () => void,\r\n}\r\n\r\nconst UserAddComponent = (props: PropsWithChildren<UserAddComponentProps>) => {\r\n\r\n    const [selectedFile, setSelectedFile] = React.useState();\r\n\r\n    const changeHandler = (event : any) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n\r\n    const afterCancel = props?.cancel;\r\n    const afterConfirm = props?.confirm;\r\n\r\n    const onAdd = (payload: any, { setSubmitting, setErrors,resetForm }: FormikHelpers<any>) => {\r\n        payload.image = selectedFile;\r\n        console.log(payload);\r\n        const formData = new FormData();\r\n        formData.append('name', payload.name);\r\n        formData.append('image', payload.image);\r\n        formData.append('email', payload.email);\r\n        formData.append('phone', payload.phone);\r\n        formData.append('position', payload.position);\r\n        console.log(formData);\r\n        console.log(formData.get(\"name\"))\r\n        CommonService._api.post(ENV.API_URL + 'candidate', formData, { 'content-type': 'multipart/form-data' } ).then((resp) => {\r\n            setSubmitting(false);\r\n            if (afterConfirm) {\r\n                afterConfirm();\r\n                resetForm({})\r\n            }\r\n        }).catch((err) => {\r\n            CommonService.handleErrors(setErrors, err);\r\n            setSubmitting(false);\r\n        })\r\n    }\r\n\r\n    const cancel = (resetForm:any) => {\r\n        if (afterCancel) {\r\n            afterCancel();\r\n           resetForm()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"user-add\"}>\r\n            <DialogTitle id=\"alert-dialog-title\">{('Add Candidate Details')}</DialogTitle>\r\n            <Formik initialValues={{ email: '', name: '',phone: \"\", position: \"\", image: \"\" }} validateOnChange={true}\r\n                validationSchema={formValidation} onSubmit={onAdd}>\r\n                {({ isSubmitting, isValid,resetForm }) => (<Form className={'form-holder'}>\r\n                    <DialogContent>\r\n                        <div className=\"form-field\">\r\n                            <FormLabel className={'form-label'}>{('Full Name')}*</FormLabel>\r\n                            <Field name='name' type={'text'} component={TextField} variant={\"outlined\"} id=\"input_user_add_full_name\"\r\n                                color={\"primary\"} className=\"search-cursor\"   inputProps={{maxLength :100}}\r\n                                placeholder={'Enter Full Name'} autoComplete=\"off\"/>\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <FormLabel className={'form-label'}>{('Phone Number')}*</FormLabel>\r\n                            <Field name='phone' type={'string'} component={TextField} variant={\"outlined\"}\r\n                                color={\"primary\"} className=\"search-cursor\"\r\n                                inputProps={{maxLength :10}}\r\n                                autoComplete=\"off\"\r\n                                id=\"input_user_add_phone\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            +91\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                placeholder={'8888888888'} />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                            <FormLabel className={'form-label'}>{('Email ID')}*</FormLabel>\r\n                            <Field name='email' type={'email'} component={TextField} variant={\"outlined\"}\r\n                                id=\"input_user_add_email\"\r\n                                color={\"primary\"} className=\"search-cursor\"   inputProps={{maxLength :100}}\r\n                                placeholder={'test@gmail.com'} autoComplete=\"off\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-field\">\r\n                            <FormLabel className={'form-label'}>{('Position')}*</FormLabel>\r\n                            <Field name='position' type={'text'} component={TextField} variant={\"outlined\"} id=\"input_user_position\"\r\n                                   color={\"primary\"} className=\"search-cursor\"   inputProps={{maxLength :100}}\r\n                                   placeholder={'Enter position'} autoComplete=\"off\"/>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"upload-icon mrg-top-20\">\r\n                            <FormLabel className={'form-label'}>{('Upload Image')}</FormLabel>\r\n                            <div className=\"margin-top\" id=\"file_Upload_Image\">\r\n                                <input type=\"file\" name=\"file\" onChange={(event) =>changeHandler(event)} />\r\n                            </div>\r\n                        </div>\r\n                        {/*<img src={selectedFile} />*/}\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={()=>cancel(resetForm)} color=\"secondary\" id=\"btn_user_add_cancel\">\r\n                            {('Cancel')}\r\n                        </Button>\r\n                        <Button type={\"submit\"} className={\"submit\"} disabled={isSubmitting || !isValid} variant={\"contained\"} color=\"secondary\" autoFocus id=\"btn_user_add_submit\">\r\n                            {('ADD Candidate')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Form>)}\r\n            </Formik>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default UserAddComponent;\r\n"]},"metadata":{},"sourceType":"module"}