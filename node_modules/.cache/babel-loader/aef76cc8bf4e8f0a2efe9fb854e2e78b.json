{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/components/core/DialogComponent.tsx\";\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport { ClearRounded } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst DialogComponent = props => {\n  // const [open, setOpen] = useState(false);\n  // const [Component, setComponent] = useState<any | null>(null);\n  // const [promise, setPromise] = useState<{ resolve: any, reject: any } | null>(null);\n  // useEffect(() => {\n  //     const subscription = Communications.DialogStateSubject.subscribe(({component, promise}) => {\n  //         setPromise(promise);\n  //         setComponent(component);\n  //         handleClickOpen();\n  //     })\n  //     return () => {\n  //         subscription.unsubscribe();\n  //     }\n  // }, []);\n  //\n  // const handleClickOpen = () => {\n  //     setOpen(true);\n  // };\n  //\n  // const confirm = () => {\n  //     promise?.resolve();\n  //     handleClose();\n  // }\n  // const cancel = () => {\n  //     promise?.reject();\n  //     handleClose();\n  // }\n  // const handleClose = () => {\n  //     setOpen(false);\n  // };\n  // @ts-ignore\n  // @ts-ignore\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    className: 'dialog-main-holder ' + (props.class || ''),\n    onClose: props.cancel,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'close-btn-holder',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: props.cancel,\n        className: 'close-btn-item',\n        id: \"close_btn\",\n        children: /*#__PURE__*/_jsxDEV(ClearRounded, {\n          style: {\n            fontSize: 30\n          },\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = DialogComponent;\nexport default DialogComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"DialogComponent\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/components/core/DialogComponent.tsx"],"names":["React","Dialog","Slide","ClearRounded","Transition","forwardRef","props","ref","DialogComponent","open","class","cancel","fontSize","children"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,SAAQC,YAAR,QAA2B,oBAA3B;;AAEA,MAAMC,UAAU,gBAAGJ,KAAK,CAACK,UAAN,MAAiB,SAASD,UAAT,CAChCE,KADgC,EAEhCC,GAFgC,EAGlC;AACE,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA,GAA3B;AAAA,OAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CALkB,CAAnB;MAAMF,U;;AAaN,MAAMI,eAAe,GAAIF,KAAD,IAAoD;AAExE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,sBACI,QAAC,MAAD;AACI,IAAA,IAAI,EAAEA,KAAK,CAACG,IADhB;AAEI,IAAA,mBAAmB,EAAEL,UAFzB;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,SAAS,EAAE,yBAAyBE,KAAK,CAACI,KAAN,IAAe,EAAxC,CAJf;AAKI,IAAA,OAAO,EAAEJ,KAAK,CAACK,MALnB;AAMI,uBAAgB,0BANpB;AAOI,wBAAiB,gCAPrB;AAAA,4BASI;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,6BACI;AACI,QAAA,OAAO,EAAEL,KAAK,CAACK,MADnB;AAC2B,QAAA,SAAS,EAAE,gBADtC;AACwD,QAAA,EAAE,EAAC,WAD3D;AAAA,+BAEI,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAACC,YAAAA,QAAQ,EAAE;AAAX,WAArB;AAAqC,UAAA,KAAK,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ,EAeKN,KAAK,CAACO,QAfX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAjED;;MAAML,e;AAmEN,eAAeA,eAAf","sourcesContent":["import React, {PropsWithChildren} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {ClearRounded} from \"@material-ui/icons\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport interface DialogComponentProps {\r\n    cancel: () => void,\r\n    open: boolean,\r\n    class?: string\r\n}\r\n\r\nconst DialogComponent = (props: PropsWithChildren<DialogComponentProps>) => {\r\n\r\n    // const [open, setOpen] = useState(false);\r\n    // const [Component, setComponent] = useState<any | null>(null);\r\n    // const [promise, setPromise] = useState<{ resolve: any, reject: any } | null>(null);\r\n\r\n    // useEffect(() => {\r\n    //     const subscription = Communications.DialogStateSubject.subscribe(({component, promise}) => {\r\n    //         setPromise(promise);\r\n    //         setComponent(component);\r\n    //         handleClickOpen();\r\n    //     })\r\n    //     return () => {\r\n    //         subscription.unsubscribe();\r\n    //     }\r\n    // }, []);\r\n    //\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n    //\r\n    // const confirm = () => {\r\n    //     promise?.resolve();\r\n    //     handleClose();\r\n    // }\r\n    // const cancel = () => {\r\n    //     promise?.reject();\r\n    //     handleClose();\r\n    // }\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            className={'dialog-main-holder ' + (props.class || '')}\r\n            onClose={props.cancel}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <div className={'close-btn-holder'}>\r\n                <div\r\n                    onClick={props.cancel} className={'close-btn-item'} id=\"close_btn\">\r\n                    <ClearRounded style={{fontSize: 30}} color={\"primary\"}/>\r\n                </div>\r\n            </div>\r\n            {props.children}\r\n            {/*{Component && <>*/}\r\n            {/*    {*/}\r\n            {/*        // @ts-ignore*/}\r\n            {/*        ({component: Component}) => {*/}\r\n            {/*            return (<Component confirm={confirm} cancel={cancel}/>)*/}\r\n            {/*        }*/}\r\n            {/*    }*/}\r\n            {/*</>*/}\r\n            {/*}*/}\r\n\r\n\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default DialogComponent\r\n"]},"metadata":{},"sourceType":"module"}