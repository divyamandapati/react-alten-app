{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/components/core/ConfirmComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { Communications } from \"../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Transition;\n\nconst ConfirmComponent = () => {\n  _s();\n\n  var _config$no, _config$no2, _config$yes, _config$yes2;\n\n  const [open, setOpen] = useState(false);\n  const [config, setConfig] = useState(null);\n  const [promise, setPromise] = useState(null);\n  useEffect(() => {\n    const subscription = Communications.ConfirmStateSubject.subscribe(_ref => {\n      let {\n        config,\n        promise\n      } = _ref;\n      setPromise(promise);\n      setConfig(config);\n      handleClickOpen();\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const confirm = () => {\n    promise === null || promise === void 0 ? void 0 : promise.resolve();\n    handleClose();\n  };\n\n  const cancel = () => {\n    promise === null || promise === void 0 ? void 0 : promise.reject();\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: cancel,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-slide-title\",\n      className: 'alert-dialog-slide-title',\n      children: (config === null || config === void 0 ? void 0 : config.confirmationText) || 'Confirm ?'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: 'pdd-20',\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: cancel,\n        variant: \"contained\",\n        color: (config === null || config === void 0 ? void 0 : (_config$no = config.no) === null || _config$no === void 0 ? void 0 : _config$no.color) || 'primary',\n        children: (config === null || config === void 0 ? void 0 : (_config$no2 = config.no) === null || _config$no2 === void 0 ? void 0 : _config$no2.text) || 'No, Cancel'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: confirm,\n        variant: \"contained\",\n        color: (config === null || config === void 0 ? void 0 : (_config$yes = config.yes) === null || _config$yes === void 0 ? void 0 : _config$yes.color) || 'default',\n        children: (config === null || config === void 0 ? void 0 : (_config$yes2 = config.yes) === null || _config$yes2 === void 0 ? void 0 : _config$yes2.text) || 'Yes, Confirm'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConfirmComponent, \"pN0GC5i+Otzcf7rzJkIIqlCaJaI=\");\n\n_c3 = ConfirmComponent;\nexport default ConfirmComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"ConfirmComponent\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/components/core/ConfirmComponent.tsx"],"names":["React","useEffect","useState","Button","Dialog","DialogActions","DialogTitle","Slide","Communications","Transition","forwardRef","props","ref","ConfirmComponent","open","setOpen","config","setConfig","promise","setPromise","subscription","ConfirmStateSubject","subscribe","handleClickOpen","unsubscribe","confirm","resolve","handleClose","cancel","reject","confirmationText","no","color","text","yes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport {TransitionProps} from '@material-ui/core/transitions';\r\nimport {Communications} from \"../../helpers\";\r\nimport {TsConfirmationConfig} from \"../../constants/CommonTypes\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ConfirmComponent = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [config, setConfig] = useState<TsConfirmationConfig | null>(null);\r\n    const [promise, setPromise] = useState<{ resolve: any, reject: any } | null>(null);\r\n\r\n    useEffect(() => {\r\n        const subscription = Communications.ConfirmStateSubject.subscribe(({config, promise}) => {\r\n            setPromise(promise);\r\n            setConfig(config);\r\n            handleClickOpen();\r\n        })\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        }\r\n    }, [])\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const confirm = () => {\r\n        promise?.resolve();\r\n        handleClose();\r\n    }\r\n    const cancel = () => {\r\n        promise?.reject();\r\n        handleClose();\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={cancel}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\"\r\n                         className={'alert-dialog-slide-title'}>{config?.confirmationText || 'Confirm ?'}</DialogTitle>\r\n            {/*<DialogContent>*/}\r\n            {/*    <DialogContentText id=\"alert-dialog-slide-description\">*/}\r\n            {/*        Let Google help apps determine location. This means sending anonymous location data to*/}\r\n            {/*        Google, even when no apps are running.*/}\r\n            {/*    </DialogContentText>*/}\r\n            {/*</DialogContent>*/}\r\n            <DialogActions className={'pdd-20'}>\r\n                <Button onClick={cancel} variant={\"contained\"} color={config?.no?.color || 'primary'}>\r\n                    {config?.no?.text || 'No, Cancel'}\r\n                </Button>\r\n                <Button onClick={confirm} variant={\"contained\"} color={config?.yes?.color || 'default'}>\r\n                    {config?.yes?.text || 'Yes, Confirm'}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default ConfirmComponent\r\n"]},"metadata":{},"sourceType":"module"}