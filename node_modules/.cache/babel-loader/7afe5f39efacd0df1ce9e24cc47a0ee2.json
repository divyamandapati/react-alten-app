{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Communications, localStore } from \"./helpers\";\nimport { loginUser } from \"./store/actions/auth.action\";\nimport { ToastContainer } from \"react-toastify\";\nimport './App.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ConfirmComponent from \"./components/core/ConfirmComponent\";\nimport \"./i18n\"; // @ts-ignore\n\nimport packageData from '../package.json';\nimport MainRouter from './navigation/navigator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_VERSION = packageData.version;\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isPageLoading, setIsPageLoading] = useState(false);\n  useEffect(() => {\n    let user = null;\n    const userString = localStore.getItem('currentUser');\n\n    if (userString) {\n      try {\n        user = JSON.parse(userString);\n      } catch (e) {\n        user = null;\n      }\n    }\n\n    const token = localStore.getItem('token');\n\n    if (token) {\n      dispatch(loginUser(user, token));\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    const pageLoadingSub = Communications.PageLoadingStateSubject.subscribe(isPageLoading => {\n      setIsPageLoading(isPageLoading);\n    });\n    return () => {\n      pageLoadingSub.unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ConfirmComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), isPageLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(MainRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'app_version_wrapper',\n      children: [\"v\", APP_VERSION]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"37tv7LTn534lzH7V13XQ5j2FeAA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/App.tsx"],"names":["React","useEffect","useState","useDispatch","Communications","localStore","loginUser","ToastContainer","ConfirmComponent","packageData","MainRouter","APP_VERSION","version","App","dispatch","isPageLoading","setIsPageLoading","user","userString","getItem","JSON","parse","e","token","pageLoadingSub","PageLoadingStateSubject","subscribe","unsubscribe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,EAAwBC,UAAxB,QAAyC,WAAzC;AACA,SAASC,SAAT,QAAyB,6BAAzB;AACA,SAAQC,cAAR,QAA6B,gBAA7B;AAEA,OAAO,YAAP;AACA,OAAO,uCAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAO,QAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAGA,MAAMC,WAAW,GAAGF,WAAW,CAACG,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,IAAI,GAAG,IAAX;AACA,UAAMC,UAAU,GAAGb,UAAU,CAACc,OAAX,CAAmB,aAAnB,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACZ,UAAI;AACAD,QAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAP;AACH,OAFD,CAEE,OAAOI,CAAP,EAAU;AACRL,QAAAA,IAAI,GAAG,IAAP;AACH;AACJ;;AACD,UAAMM,KAAK,GAAGlB,UAAU,CAACc,OAAX,CAAmB,OAAnB,CAAd;;AACA,QAAII,KAAJ,EAAW;AACPT,MAAAA,QAAQ,CAACR,SAAS,CAACW,IAAD,EAAOM,KAAP,CAAV,CAAR;AACH;AACJ,GAdQ,EAcN,CAACT,QAAD,CAdM,CAAT;AAgBAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,cAAc,GAAGpB,cAAc,CAACqB,uBAAf,CAAuCC,SAAvC,CAAiDX,aAAa,IAAI;AACrFC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,KAFsB,CAAvB;AAGA,WAAO,MAAM;AACTS,MAAAA,cAAc,CAACG,WAAf;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAE,WAA1B;AAAuC,MAAA,WAAW,EAAE;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKZ,aAAa,iBAAI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHtB,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAE,qBAAhB;AAAA,sBAAyCJ,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArCD;;GAAME,G;UACeV,W;;;KADfU,G;AAuCN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Communications, localStore} from \"./helpers\";\r\nimport { loginUser} from \"./store/actions/auth.action\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n\r\nimport './App.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ConfirmComponent from \"./components/core/ConfirmComponent\";\r\nimport \"./i18n\" \r\n\r\n// @ts-ignore\r\nimport packageData from '../package.json';\r\nimport MainRouter from './navigation/navigator';\r\n\r\n\r\nconst APP_VERSION = packageData.version;\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const [isPageLoading, setIsPageLoading] = useState(false);\r\n    useEffect(() => {\r\n        let user = null;\r\n        const userString = localStore.getItem('currentUser');\r\n        if (userString) {\r\n            try {\r\n                user = JSON.parse(userString);\r\n            } catch (e) {\r\n                user = null;\r\n            }\r\n        }\r\n        const token = localStore.getItem('token');\r\n        if (token) {\r\n            dispatch(loginUser(user, token));\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const pageLoadingSub = Communications.PageLoadingStateSubject.subscribe(isPageLoading => {\r\n            setIsPageLoading(isPageLoading);\r\n        })\r\n        return () => {\r\n            pageLoadingSub.unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ConfirmComponent/>\r\n            <ToastContainer position={\"top-right\"} newestOnTop={true}/>\r\n            {isPageLoading && <div className=\"page-loading\"/>}\r\n            <MainRouter/>\r\n            <div className={'app_version_wrapper'}>v{APP_VERSION}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}