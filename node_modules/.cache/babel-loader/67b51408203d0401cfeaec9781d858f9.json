{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccessControlComponent = props => {\n  _s();\n\n  const {\n    user,\n    view\n  } = useSelector(state => state.auth);\n  const {\n    other\n  } = useSelector(state => state);\n\n  if (other.roleAccess === undefined) {} else {\n    user.role = other.roleAccess;\n  }\n\n  if (view === \"VIEW AS DOCTOR\" && user.role === \"doctor\" && user.is_admin === true) {\n    user.role = 'doctor';\n  } else if (view && user.role === \"doctor\" && user.is_admin === true) {\n    user.role = 'hospital_admin';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user && props.role.indexOf(user.role) > -1 && props.children\n  }, void 0, false);\n};\n\n_s(AccessControlComponent, \"04MHUvO74VACwE4ecHZPvHClTDc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AccessControlComponent;\nexport default AccessControlComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessControlComponent\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/components/core/AccessControl.tsx"],"names":["React","useSelector","AccessControlComponent","props","user","view","state","auth","other","roleAccess","undefined","role","is_admin","indexOf","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;;AAOA,MAAMC,sBAAsB,GAAIC,KAAD,IAA2D;AAAA;;AACtF,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAcJ,WAAW,CAAEK,KAAD,IAAwBA,KAAK,CAACC,IAA/B,CAA/B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAcP,WAAW,CAAEK,KAAD,IAAwBA,KAAzB,CAA/B;;AAEA,MAAGE,KAAK,CAACC,UAAN,KAAmBC,SAAtB,EAAgC,CAC/B,CADD,MACK;AACDN,IAAAA,IAAI,CAACO,IAAL,GAAUH,KAAK,CAACC,UAAhB;AACH;;AACD,MAAGJ,IAAI,KAAG,gBAAP,IAA2BD,IAAI,CAACO,IAAL,KAAY,QAAvC,IAAmDP,IAAI,CAACQ,QAAL,KAAgB,IAAtE,EAA4E;AACxER,IAAAA,IAAI,CAACO,IAAL,GAAU,QAAV;AACH,GAFD,MAEM,IAAGN,IAAI,IAAID,IAAI,CAACO,IAAL,KAAY,QAApB,IAAgCP,IAAI,CAACQ,QAAL,KAAgB,IAAnD,EAAwD;AAC1DR,IAAAA,IAAI,CAACO,IAAL,GAAU,gBAAV;AACH;;AAED,sBACI;AAAA,cACKP,IAAI,IAAID,KAAK,CAACQ,IAAN,CAAWE,OAAX,CAAmBT,IAAI,CAACO,IAAxB,IAAgC,CAAC,CAAzC,IAA8CR,KAAK,CAACW;AADzD,mBADJ;AAKH,CAnBD;;GAAMZ,sB;UACkBD,W,EACAA,W;;;KAFlBC,sB;AAqBN,eAAeA,sBAAf","sourcesContent":["import React, {PropsWithChildren} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {StateParams} from \"../../store/reducers\";\r\n\r\nexport interface AccessControlComponentProps {\r\n    role: ('admin' | 'hospital_admin' | 'doctor' | 'team_member' | 'hospital_view')[],\r\n}\r\n\r\nconst AccessControlComponent = (props: PropsWithChildren<AccessControlComponentProps>) => {\r\n    const {user,view} = useSelector((state: StateParams) => state.auth);\r\n    const {other}:any = useSelector((state: StateParams) => state)\r\n\r\n    if(other.roleAccess===undefined){\r\n    }else{\r\n        user.role=other.roleAccess\r\n    }\r\n    if(view===\"VIEW AS DOCTOR\" && user.role===\"doctor\" && user.is_admin===true ){\r\n        user.role='doctor'\r\n    }else if(view && user.role===\"doctor\" && user.is_admin===true){\r\n        user.role='hospital_admin'\r\n    }\r\n   \r\n    return (\r\n        <>\r\n            {user && props.role.indexOf(user.role) > -1 && props.children}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AccessControlComponent;\r\n"]},"metadata":{},"sourceType":"module"}