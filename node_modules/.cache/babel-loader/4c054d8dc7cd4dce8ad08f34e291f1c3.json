{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/app/auth/login/LoginScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './LoginScreen.scss';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { TextField } from 'formik-material-ui';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch } from 'react-redux';\nimport { ENV } from '../../../constants';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommonService from '../../../helpers/common-service';\nimport { loginUser } from '../../../store/actions/auth.action';\nimport { setImageUrl } from '../../../store/actions/others.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\nconst loginFormValidation = Yup.object({\n  password: Yup.string().required('Required')\n});\n\nconst LoginScreen = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({\n    showPassword: false\n  });\n\n  const onLogin = (payload, _ref) => {\n    var _payload;\n\n    let {\n      setSubmitting,\n      setErrors\n    } = _ref;\n    payload = { ...payload,\n      username: (_payload = payload) === null || _payload === void 0 ? void 0 : _payload.username.trim()\n    };\n\n    CommonService._api.post(ENV.API_URL + '/login', payload).then(resp => {\n      setSubmitting(false);\n      dispatch(loginUser(resp.data.user, resp.data.token));\n      dispatch(setImageUrl(resp.data.user.logo));\n    }).catch(err => {\n      CommonService.handleErrors(setErrors, err); // console.log(err);\n      // CommonService.showToast(err.error || 'Error', 'error');\n\n      setSubmitting(false);\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-auth-wrapper login-screen screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      validateOnChange: true,\n      validate: values => {\n        const errors = {};\n\n        if (!values.username) {\n          errors.username = 'Required';\n        } else {\n          try {\n            const username = Number(values.username);\n\n            if (isNaN(username)) {\n              if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.username)) {\n                errors.username = 'Invalid email address';\n              }\n            } else if (!isPhone.test(username.toString())) {\n              errors.username = 'Invalid phone number';\n            }\n          } catch (e) {}\n        }\n\n        return errors;\n      },\n      validationSchema: loginFormValidation,\n      onSubmit: onLogin,\n      children: _ref2 => {\n        let {\n          isSubmitting,\n          isValid\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: 'loginFormHolder form-holder',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              className: 'form-label',\n              children: \"Email ID / Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              type: 'text',\n              component: TextField,\n              size: 'small',\n              variant: 'outlined',\n              id: \"login_email_phone\",\n              color: 'primary',\n              placeholder: 'Enter Email Id/Phone Number',\n              className: \"input-cursor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field position-relative\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              className: 'form-label',\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: 'password',\n              component: TextField,\n              type: values.showPassword ? 'text' : 'password',\n              placeholder: 'Enter the Password',\n              max: 16,\n              id: \"login_password\",\n              variant: 'outlined',\n              color: 'primary',\n              className: \"input-cursor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: 'eye_btn_wrapper',\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                size: 'small',\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                id: \"login_password_show_hide_btn\",\n                onMouseDown: handleMouseDownPassword,\n                children: values.showPassword ? 'Hide' : 'Show'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: isSubmitting || !isValid,\n              color: \"secondary\",\n              variant: 'contained',\n              id: \"login_button\",\n              type: 'submit',\n              size: 'medium',\n              className: 'login-button',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"2ax+l4mu/eV5yoWE+yGf/r9rs9A=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/app/auth/login/LoginScreen.tsx"],"names":["React","Field","Form","Formik","Yup","FormLabel","TextField","Button","useDispatch","ENV","IconButton","CommonService","loginUser","setImageUrl","isPhone","RegExp","loginFormValidation","object","password","string","required","LoginScreen","props","dispatch","values","setValues","useState","showPassword","onLogin","payload","setSubmitting","setErrors","username","trim","_api","post","API_URL","then","resp","data","user","token","logo","catch","err","handleErrors","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","errors","Number","isNaN","test","toString","e","isSubmitting","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, Form, Formik, FormikHelpers } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './LoginScreen.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { TextField } from 'formik-material-ui';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ENV } from '../../../constants';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommonService from '../../../helpers/common-service';\r\nimport { loginUser } from '../../../store/actions/auth.action';\r\nimport { setImageUrl } from '../../../store/actions/others.action';\r\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\r\n\r\nconst loginFormValidation = Yup.object({\r\n    password: Yup.string().required('Required')\r\n});\r\n\r\nconst LoginScreen = (props: any) => {\r\n    const dispatch = useDispatch();\r\n    const [ values, setValues ] = React.useState({\r\n        showPassword: false\r\n    });\r\n    const onLogin = (payload: any, { setSubmitting, setErrors }: FormikHelpers<any>) => {\r\n        payload={\r\n            ...payload,\r\n            username:payload?.username.trim()\r\n        }\r\n        CommonService._api\r\n            .post(ENV.API_URL + '/login', payload)\r\n            .then((resp) => {\r\n                setSubmitting(false);\r\n                dispatch(loginUser(resp.data.user, resp.data.token));\r\n                dispatch(setImageUrl(resp.data.user.logo));\r\n            })\r\n            .catch((err) => {\r\n                CommonService.handleErrors(setErrors, err);\r\n                // console.log(err);\r\n               // CommonService.showToast(err.error || 'Error', 'error');\r\n                setSubmitting(false);\r\n            });\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: any) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-auth-wrapper login-screen screen\">\r\n            <div className=\"auth-header\">LOGIN</div>\r\n            <Formik\r\n                initialValues={{ username: '', password: '' }}\r\n                validateOnChange={true}\r\n                validate={(values) => {\r\n                    const errors: { username?: string; password?: string } = {};\r\n                    if (!values.username) {\r\n                        errors.username = 'Required';\r\n                    } else {\r\n                        try {\r\n                            const username = Number(values.username);\r\n                            if (isNaN(username)) {\r\n                                if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.username)) {\r\n                                    errors.username = 'Invalid email address';\r\n                                }\r\n                            } else if (!isPhone.test(username.toString())) {\r\n                                errors.username = 'Invalid phone number';\r\n                            }\r\n                        } catch (e) {}\r\n                    }\r\n                    return errors;\r\n                }}\r\n                validationSchema={loginFormValidation}\r\n                onSubmit={onLogin}\r\n            >\r\n                {({ isSubmitting, isValid }) => (\r\n                    <Form className={'loginFormHolder form-holder'}>\r\n                        <div className=\"form-field\">\r\n                            <FormLabel className={'form-label'}>Email ID / Phone Number</FormLabel>\r\n                            <Field\r\n                                name=\"username\"\r\n                                type={'text'}\r\n                                component={TextField}\r\n                                size={'small'}\r\n                                variant={'outlined'}\r\n                                id={\"login_email_phone\"}\r\n                                color={'primary'}\r\n                                placeholder={'Enter Email Id/Phone Number'}\r\n                                className=\"input-cursor\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-field position-relative\">\r\n                            <FormLabel className={'form-label'}>Password</FormLabel>\r\n                            <Field\r\n                                name={'password'}\r\n                                component={TextField}\r\n                                type={values.showPassword ? 'text' : 'password'}\r\n                                placeholder={'Enter the Password'}\r\n                                max={16}\r\n                                id={\"login_password\"}\r\n                                variant={'outlined'}\r\n                                color={'primary'}\r\n                                className=\"input-cursor\"\r\n                            />\r\n                            <div className={'eye_btn_wrapper'}>\r\n                                <IconButton\r\n                                    size={'small'}\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    id=\"login_password_show_hide_btn\"\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showPassword ? 'Hide' : 'Show'}\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-field\">\r\n                            <Button\r\n                                disabled={isSubmitting || !isValid}\r\n                               color=\"secondary\"\r\n                                variant={'contained'}\r\n                                id=\"login_button\"\r\n                                type={'submit'}\r\n                                size={'medium'}\r\n                                className={'login-button'}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}