{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/app/users/edit/UserEditComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, DialogActions, DialogContent, DialogTitle, InputAdornment } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { TextField } from \"formik-material-ui\";\nimport { ENV } from \"../../../constants\";\nimport CommonService from \"../../../helpers/common-service\";\nimport \"./UserEditComponent.scss\";\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\nconst formValidation = Yup.object({\n  name: Yup.string().min(4, \"Invalid name\").test('alphabets', 'Name must only contain alphabets', value => {\n    return /^[a-zA-Z0-9\\s]+$/.test(value);\n  }).required(\"Required\"),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  phone: Yup.string().min(10, 'Invalid Phone Number').max(10, 'Invalid Phone Number').matches(isPhone, 'Phone number is not valid').required('Required')\n});\n\nconst UserEditComponent = props => {\n  _s();\n\n  const afterCancel = props === null || props === void 0 ? void 0 : props.cancel;\n  const afterConfirm = props === null || props === void 0 ? void 0 : props.confirm;\n  const params = useParams();\n  const {\n    id\n  } = params;\n  const [userInfo, setUserInfo] = useState(null);\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    const init = () => {\n      CommonService._api.get(ENV.API_URL + 'candidate/' + id).then(resp => {\n        console.log(resp.data);\n        setUserInfo(resp.data);\n      });\n    };\n\n    init();\n  }, [id]);\n\n  const onAdd = (payload, _ref) => {\n    let {\n      setSubmitting,\n      setErrors\n    } = _ref;\n    payload = { ...payload,\n      \"user_id\": userInfo === null || userInfo === void 0 ? void 0 : userInfo.user_id\n    };\n\n    CommonService._api.put(ENV.API_URL + 'candidate/' + id, payload).then(resp => {\n      // console.log(resp);\n      setSubmitting(false);\n\n      if (afterConfirm) {\n        afterConfirm();\n        CommonService.showToast(resp.msg || 'Success', 'success');\n      }\n    }).catch(err => {\n      CommonService.handleErrors(setErrors, err);\n      setSubmitting(false);\n    });\n  };\n\n  const cancel = () => {\n    if (afterCancel) {\n      afterCancel();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-add\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"alert-dialog-title\",\n      children: 'Edit Candidate Details'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), userInfo && userInfo != null ? /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: userInfo === null || userInfo === void 0 ? void 0 : userInfo.name,\n        email: userInfo === null || userInfo === void 0 ? void 0 : userInfo.email,\n        phone: userInfo === null || userInfo === void 0 ? void 0 : userInfo.phone,\n        dob: userInfo === null || userInfo === void 0 ? void 0 : userInfo.dob,\n        gender: userInfo === null || userInfo === void 0 ? void 0 : userInfo.gender,\n        is_admin_access: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.role) === \"admin\" ? true : false\n      },\n      validateOnChange: true,\n      validationSchema: formValidation,\n      onSubmit: onAdd,\n      children: _ref2 => {\n        let {\n          isSubmitting,\n          isValid\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: 'form-holder',\n          children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Full Name', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"name\",\n                type: 'text',\n                component: TextField,\n                variant: \"outlined\",\n                id: \"input_user_edit_full_name\",\n                color: \"primary\",\n                autoComplete: \"off\",\n                inputProps: {\n                  maxLength: 100\n                },\n                placeholder: 'Enter Name'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Phone Number', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"phone\",\n                type: 'text',\n                component: TextField,\n                variant: \"outlined\",\n                color: \"primary\",\n                inputProps: {\n                  maxLength: 10\n                },\n                id: \"input_user_edit_phone\",\n                autoComplete: \"off\",\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"+91\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 49\n                  }, this)\n                },\n                placeholder: 'Enter Phone Number'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                className: 'form-label',\n                children: ['Email ID', \"*\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"email\",\n                type: 'email',\n                component: TextField,\n                variant: \"outlined\",\n                color: \"primary\",\n                inputProps: {\n                  maxLength: 100\n                },\n                autoComplete: \"off\",\n                id: \"input_user_edit_email\",\n                placeholder: 'Enter Email Address'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: cancel,\n              color: \"secondary\",\n              id: \"btn_user_edit_cancel\",\n              children: 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"submit\",\n              disabled: isSubmitting || !isValid,\n              variant: \"contained\",\n              color: \"secondary\",\n              id: \"btn_user_edit_submit\",\n              children: 'Save Changes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 58\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserEditComponent, \"qEgBd0ASdpEgJRJ3ByZu0h119Cg=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = UserEditComponent;\nexport default UserEditComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditComponent\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/app/users/edit/UserEditComponent.tsx"],"names":["Button","DialogActions","DialogContent","DialogTitle","InputAdornment","React","useState","useEffect","Yup","Field","Form","Formik","FormLabel","TextField","ENV","CommonService","useParams","useSelector","isPhone","RegExp","formValidation","object","name","string","min","test","value","required","email","phone","max","matches","UserEditComponent","props","afterCancel","cancel","afterConfirm","confirm","params","id","userInfo","setUserInfo","user","state","auth","init","_api","get","API_URL","then","resp","console","log","data","onAdd","payload","setSubmitting","setErrors","user_id","put","showToast","msg","catch","err","handleErrors","dob","gender","is_admin_access","role","isSubmitting","isValid","maxLength","startAdornment"],"mappings":"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","sourcesContent":["import { Button, DialogActions, DialogContent, DialogTitle, InputAdornment } from '@material-ui/core';\r\nimport React, { PropsWithChildren, useState, useEffect } from 'react';\r\nimport * as Yup from \"yup\";\r\nimport { Field, Form, Formik, FormikHelpers } from \"formik\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { TextField } from \"formik-material-ui\";\r\nimport { ENV } from \"../../../constants\";\r\nimport CommonService from \"../../../helpers/common-service\";\r\nimport \"./UserEditComponent.scss\"\r\nimport { useParams } from 'react-router-dom';\r\nimport { RadioGroup } from 'formik-material-ui';\r\nimport { FormControlLabel, Radio } from '@material-ui/core';\r\nimport {  useSelector } from 'react-redux';\r\n\r\nconst isPhone = new RegExp('(^[6789][0-9]{9})');\r\n\r\nconst formValidation = Yup.object({\r\n    name: Yup.string().min(4, \"Invalid name\").test('alphabets', 'Name must only contain alphabets', (value: any) => {\r\n        return /^[a-zA-Z0-9\\s]+$/.test(value);\r\n    }).required(\"Required\"),\r\n    email: Yup.string().email('Invalid email address').required('Required'),\r\n    phone: Yup.string().min(10, 'Invalid Phone Number').max(10, 'Invalid Phone Number').matches(isPhone, 'Phone number is not valid').required('Required'),\r\n})\r\n\r\nexport interface UserEditComponentProps {\r\n    cancel: () => void,\r\n    confirm: () => void,\r\n}\r\n\r\n\r\nconst UserEditComponent = (props: PropsWithChildren<UserEditComponentProps>) => {\r\n    const afterCancel = props?.cancel;\r\n    const afterConfirm = props?.confirm;\r\n    const params = useParams<{id: string}>();\r\n    const {id} = params\r\n    const [userInfo, setUserInfo] = useState<any>(null)\r\n    const  user  = useSelector((state:any) => state.auth.user);\r\n    useEffect(() => {\r\n        const init = () => {\r\n            CommonService._api.get(ENV.API_URL + 'candidate/' + id).then((resp) => {\r\n                console.log(resp.data)\r\n                setUserInfo(resp.data);\r\n            });\r\n        }\r\n        init();\r\n\r\n    }, [id])\r\n    \r\n    const onAdd = (payload: any, { setSubmitting, setErrors }: FormikHelpers<any>) => {\r\n        payload={\r\n            ...payload,\r\n            \"user_id\":userInfo?.user_id\r\n        }\r\n        CommonService._api.put(ENV.API_URL + 'candidate/' + id, payload).then((resp) => {\r\n            // console.log(resp);\r\n            setSubmitting(false);\r\n            if (afterConfirm) {\r\n                afterConfirm();\r\n                CommonService.showToast(resp.msg || 'Success', 'success');\r\n            }\r\n        }).catch((err) => {\r\n            CommonService.handleErrors(setErrors, err);\r\n            setSubmitting(false);\r\n        })\r\n    }\r\n\r\n    const cancel = () => {\r\n        if (afterCancel) {\r\n            afterCancel();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"user-add\"}>\r\n            <DialogTitle id=\"alert-dialog-title\">{('Edit Candidate Details')}</DialogTitle>\r\n            {\r\n                userInfo && userInfo != null ?\r\n                    <Formik initialValues={{ name: userInfo?.name,email: userInfo?.email, phone: userInfo?.phone, dob: userInfo?.dob, gender: userInfo?.gender, is_admin_access: userInfo?.role === \"admin\" ? true : false }} validateOnChange={true}\r\n                        validationSchema={formValidation} onSubmit={onAdd}>\r\n                        {({ isSubmitting, isValid }) => (<Form className={'form-holder'}>\r\n                            <DialogContent>\r\n                                <div className=\"form-field\">\r\n                                    <FormLabel className={'form-label'}>{('Full Name')}*</FormLabel>\r\n                                    <Field name='name' type={'text'} component={TextField} variant={\"outlined\"} id=\"input_user_edit_full_name\"\r\n                                        color={\"primary\"}\r\n                                        autoComplete=\"off\"   inputProps={{maxLength :100}}\r\n                                        placeholder={'Enter Name'} />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <FormLabel className={'form-label'}>{('Phone Number')}*</FormLabel>\r\n                                    <Field name='phone' type={'text'} component={TextField} variant={\"outlined\"}\r\n                                        color={\"primary\"}\r\n                                        inputProps={{maxLength :10}}\r\n                                        id=\"input_user_edit_phone\"\r\n                                        autoComplete=\"off\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    +91\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                        placeholder={'Enter Phone Number'} />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <FormLabel className={'form-label'}>{('Email ID')}*</FormLabel>\r\n                                    <Field name='email' type={'email'} component={TextField} variant={\"outlined\"}\r\n                                        color={\"primary\"}  inputProps={{maxLength :100}}\r\n                                        autoComplete=\"off\" \r\n                                        id=\"input_user_edit_email\"\r\n                                        placeholder={'Enter Email Address'} />\r\n                                </div>\r\n                                \r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={cancel} color=\"secondary\" id=\"btn_user_edit_cancel\">\r\n                                    {('Cancel')}\r\n                                </Button>\r\n                                <Button type={\"submit\"} className={\"submit\"} disabled={isSubmitting || !isValid} variant={\"contained\"} color=\"secondary\" id=\"btn_user_edit_submit\">\r\n                                    {('Save Changes')}\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Form>)}\r\n                    </Formik>\r\n                    : <></>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default UserEditComponent;\r\n"]},"metadata":{},"sourceType":"module"}