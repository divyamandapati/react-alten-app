{"ast":null,"code":"var _jsxFileName = \"/Users/divya/Documents/practice/react-alten-app/src/app/users/list/UsersListScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport './UserListScreen.scss';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport { no_data } from \"../../../constants/ImageConfig\";\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport Pagination from '@material-ui/lab/Pagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { TsDataListOptions, TsDataListWrapperClass } from \"../../../classes/ts-data-list-wrapper.class\";\nimport { ENV } from \"../../../constants\";\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ApiService, Communications } from \"../../../helpers\";\nimport { Button, LinearProgress, TextField } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport DialogComponent from \"../../../components/core/DialogComponent\";\nimport UserAddComponent from \"../add/UserAddComponent\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport UserEditComponent from \"../edit/UserEditComponent\";\nimport CommonService from \"../../../helpers/common-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UsersListScreen(props) {\n  _s();\n\n  var _list$table, _list$table2, _list$table3, _list$table3$paginati, _list$table4, _list$table4$paginati;\n\n  const [list, setList] = useState(null);\n  const [isAddOpen, setIsAddOpen] = useState(false);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [candidateDetails, setCandidateDetails] = useState(null);\n  const [page, setPage] = React.useState(1);\n  const onReload = useCallback(function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    if (list) {\n      list.table.reload(page);\n    } else {\n      setList(prevState => {\n        prevState === null || prevState === void 0 ? void 0 : prevState.table.reload(page);\n        return prevState;\n      });\n    }\n  }, [list]);\n  const init = useCallback(() => {\n    // config\n    if (!list) {\n      const options = new TsDataListOptions({\n        webMatColumns: ['User Id', 'Name', 'Email', 'Phone', 'Position', 'actions'],\n        mobileMatColumns: ['User Id', 'Name', 'Email', 'Phone', 'Position', 'actions']\n      }, ENV.API_URL + 'candidate', setList, ApiService, 'get');\n      let tableWrapperObj = new TsDataListWrapperClass(options);\n      setList({\n        table: tableWrapperObj\n      });\n    }\n  }, [list]);\n  useEffect(() => {\n    init();\n    Communications.pageTitleSubject.next('Candidate List');\n    Communications.pageBackButtonSubject.next(null);\n    Communications.accessRoleSubject.next('');\n    Communications.accessRoleLinkSubject.next('');\n  }, [init]);\n  const handleClearSearch = useCallback(() => {\n    if (list !== null && list !== void 0 && list.table) {\n      list.table.filter.search = \"\";\n      list.table.reload();\n    }\n  }, [list]);\n  const openAdd = useCallback(() => {\n    setIsAddOpen(true);\n  }, []);\n  const cancelAdd = useCallback(() => {\n    setIsAddOpen(false);\n    onReload(1);\n  }, [onReload]);\n  const confirmAdd = useCallback(() => {\n    setIsAddOpen(false);\n    onReload(1);\n  }, [onReload]);\n  const openEdit = useCallback(() => {\n    setIsEditOpen(true);\n  }, []);\n  const cancelEdit = useCallback(() => {\n    setIsEditOpen(false);\n    onReload(1);\n  }, [onReload]);\n  const confirmEdit = useCallback(() => {\n    setIsEditOpen(false);\n    onReload(1);\n  }, [onReload]);\n  const onDeleteUser = useCallback(id => {\n    let payload = {};\n\n    CommonService._api.delete(ENV.API_URL + 'candidate/' + id, payload).then(() => {\n      init();\n      onReload(1);\n    }).catch(err => {\n      CommonService.showToast((err === null || err === void 0 ? void 0 : err.error) || 'Error', 'error');\n    });\n  }, [onReload, init]);\n  const getUserDetails = useCallback(id => {\n    CommonService._api.get(ENV.API_URL + 'candidate/' + id).then(resp => {\n      setCandidateDetails(resp === null || resp === void 0 ? void 0 : resp.data);\n      console.log(resp === null || resp === void 0 ? void 0 : resp.data);\n      openEdit();\n    }).catch(err => {\n      CommonService.showToast((err === null || err === void 0 ? void 0 : err.error) || 'Error', 'error');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogComponent, {\n      class: 'dialog-side-wrapper',\n      open: isAddOpen,\n      cancel: cancelAdd,\n      children: /*#__PURE__*/_jsxDEV(UserAddComponent, {\n        cancel: cancelAdd,\n        confirm: confirmAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogComponent, {\n      class: 'dialog-side-wrapper',\n      open: isEditOpen,\n      cancel: cancelEdit,\n      children: /*#__PURE__*/_jsxDEV(UserEditComponent, {\n        cancel: cancelEdit,\n        confirm: confirmEdit,\n        candidateDetails: candidateDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'user-list  screen crud-layout',\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        className: \"paper\",\n        children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: list && ((_list$table = list.table) === null || _list$table === void 0 ? void 0 : _list$table._isDataLoading) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-loading-indicator\",\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"count\",\n              children: ['Candidates', \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"table-count\",\n                children: [\"(\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"txt_user_count\",\n                  children: list === null || list === void 0 ? void 0 : list.table.pagination.totalItems\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 98\n                }, this), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 67\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex position-relative\",\n                children: [!(list !== null && list !== void 0 && list.table.filter.search) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search_icon\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search_icon\",\n                  children: /*#__PURE__*/_jsxDEV(ClearIcon, {\n                    onClick: handleClearSearch,\n                    id: \"clear_user_search\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 71\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  defaultValue: '',\n                  className: \"search-cursor\",\n                  id: \"input_search_user\",\n                  onChange: event => {\n                    if (list && list.table) {\n                      list.table.filter.search = event.target.value;\n                      list.table.reload();\n                      list === null || list === void 0 ? void 0 : list.table.pageEvent(0);\n                      setPage(1);\n                    }\n                  },\n                  value: list === null || list === void 0 ? void 0 : list.table.filter.search,\n                  variant: \"outlined\",\n                  size: \"small\",\n                  type: 'text',\n                  placeholder: 'Search Candidate'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"actions\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    id: \"btn_add_user_list\",\n                    className: \"add-button\",\n                    onClick: openAdd,\n                    children: [/*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 41\n                    }, this), \" \\xA0\\xA0\", 'ADD Candidate']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), list && list.table && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"simple table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: list === null || list === void 0 ? void 0 : list.table.matColumns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: \"table-left table-cell\",\n                    children: column\n                  }, 'header-col-' + columnIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: list === null || list === void 0 ? void 0 : list.table.data.map((row, rowIndex) => {\n                  var _row$name, _row$name2;\n\n                  // console.log(row);\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    role: \"checkbox\",\n                    tabIndex: -1,\n                    className: \"table-row\",\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: row['uid']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"user-name\",\n                        children: ((_row$name = row['name']) === null || _row$name === void 0 ? void 0 : _row$name.length) > 25 ? ((_row$name2 = row['name']) === null || _row$name2 === void 0 ? void 0 : _row$name2.slice(0, 25)) + \"...\" : row['name']\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"hide over-flow\",\n                        children: row['name']\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: row['email']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: row['phone']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: row['position']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 50\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        id: \"btn_edit_user_list\",\n                        className: \"edit-button\",\n                        onClick: () => getUserDetails(row[\"_id\"]),\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 53\n                      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                        id: \"btn_delete_user_list\",\n                        className: \"delete-button\",\n                        onClick: () => onDeleteUser(row[\"_id\"]),\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 49\n                    }, this)]\n                  }, 'row-' + rowIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-data\",\n              children: !((_list$table2 = list.table) !== null && _list$table2 !== void 0 && _list$table2._isDataLoading) && (list === null || list === void 0 ? void 0 : list.table.data.length) === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: 'No Users added'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 101\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: no_data,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 130\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"pagination\",\n        count: list !== null && list !== void 0 && (_list$table3 = list.table) !== null && _list$table3 !== void 0 && (_list$table3$paginati = _list$table3.pagination) !== null && _list$table3$paginati !== void 0 && _list$table3$paginati.totalItems ? Math.ceil((list === null || list === void 0 ? void 0 : (_list$table4 = list.table) === null || _list$table4 === void 0 ? void 0 : (_list$table4$paginati = _list$table4.pagination) === null || _list$table4$paginati === void 0 ? void 0 : _list$table4$paginati.totalItems) / (list === null || list === void 0 ? void 0 : list.table.pagination.pageSize)) : 0,\n        onChange: (event, pageNumber) => {\n          list === null || list === void 0 ? void 0 : list.table.pageEvent(pageNumber - 1);\n          setPage(pageNumber);\n        },\n        page: page,\n        shape: \"rounded\",\n        color: \"primary\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UsersListScreen, \"+JpKQqXkPKvFgc5jzD2PiEAtq8A=\");\n\n_c = UsersListScreen;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListScreen\");","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/app/users/list/UsersListScreen.tsx"],"names":["React","useEffect","useCallback","useState","Paper","Table","TableBody","TableCell","no_data","TableContainer","TableHead","Pagination","TableRow","TsDataListOptions","TsDataListWrapperClass","ENV","AddIcon","EditIcon","DeleteIcon","ApiService","Communications","Button","LinearProgress","TextField","SearchIcon","DialogComponent","UserAddComponent","ClearIcon","UserEditComponent","CommonService","UsersListScreen","props","list","setList","isAddOpen","setIsAddOpen","isEditOpen","setIsEditOpen","candidateDetails","setCandidateDetails","page","setPage","onReload","table","reload","prevState","init","options","webMatColumns","mobileMatColumns","API_URL","tableWrapperObj","pageTitleSubject","next","pageBackButtonSubject","accessRoleSubject","accessRoleLinkSubject","handleClearSearch","filter","search","openAdd","cancelAdd","confirmAdd","openEdit","cancelEdit","confirmEdit","onDeleteUser","id","payload","_api","delete","then","catch","err","showToast","error","getUserDetails","get","resp","data","console","log","_isDataLoading","pagination","totalItems","event","target","value","pageEvent","matColumns","map","column","columnIndex","row","rowIndex","length","slice","Math","ceil","pageSize","pageNumber"],"mappings":"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","sourcesContent":["import React, { useEffect,useCallback,useState } from 'react';\r\nimport './UserListScreen.scss';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { no_data } from \"../../../constants/ImageConfig\"\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { TsDataListOptions, TsDataListWrapperClass } from \"../../../classes/ts-data-list-wrapper.class\";\r\nimport { ENV } from \"../../../constants\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ApiService, Communications} from \"../../../helpers\";\r\nimport { Button,  LinearProgress, TextField } from \"@material-ui/core\";\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DialogComponent from \"../../../components/core/DialogComponent\";\r\nimport UserAddComponent from \"../add/UserAddComponent\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport UserEditComponent from \"../edit/UserEditComponent\";\r\nimport CommonService from \"../../../helpers/common-service\";\r\n\r\nexport default function UsersListScreen(props: any) {\r\n    const [list, setList] = useState<{ table: TsDataListWrapperClass } | null>(null);\r\n    const [isAddOpen, setIsAddOpen] = useState<boolean>(false);\r\n    const [isEditOpen, setIsEditOpen] = useState<boolean>(false);\r\n    const [candidateDetails,setCandidateDetails] = useState<any>(null);\r\n    const [page,setPage]=React.useState<any>(1);\r\n    const onReload = useCallback((page = 1) => {\r\n        if (list) {\r\n            list.table.reload(page);\r\n        } else {\r\n            setList(prevState => {\r\n                prevState?.table.reload(page);\r\n                return prevState;\r\n            })\r\n        }\r\n    }, [list]);\r\n\r\n    const init = useCallback(() => {\r\n        // config\r\n        if(!list){\r\n        const options = new TsDataListOptions({\r\n            webMatColumns: ['User Id', 'Name', 'Email', 'Phone','Position','actions'],\r\n            mobileMatColumns: ['User Id', 'Name', 'Email', 'Phone','Position', 'actions'],\r\n        }, ENV.API_URL + 'candidate', setList, ApiService,'get');\r\n\r\n        let tableWrapperObj = new TsDataListWrapperClass(options)\r\n        setList({ table: tableWrapperObj });\r\n    }\r\n    },[list])\r\n\r\n    useEffect(() => {\r\n        init();\r\n        Communications.pageTitleSubject.next('Candidate List');\r\n        Communications.pageBackButtonSubject.next(null);\r\n        Communications.accessRoleSubject.next('');\r\n        Communications.accessRoleLinkSubject.next('');\r\n    }, [init])\r\n\r\n   const handleClearSearch=useCallback(()=>{\r\n    if (list?.table) {\r\n        list.table.filter.search = \"\"\r\n        list.table.reload();\r\n    }\r\n   },[list])\r\n   \r\n    const openAdd =useCallback (() => {\r\n        setIsAddOpen(true);\r\n    },[])\r\n\r\n    const cancelAdd = useCallback(() => {\r\n        setIsAddOpen(false);\r\n        onReload(1)\r\n    },[onReload])\r\n\r\n    const confirmAdd = useCallback(() => {\r\n        setIsAddOpen(false);\r\n        onReload(1);\r\n    }, [onReload])\r\n\r\n\r\n    const openEdit =useCallback (() => {\r\n        setIsEditOpen(true);\r\n    },[])\r\n\r\n    const cancelEdit = useCallback(() => {\r\n        setIsEditOpen(false);\r\n        onReload(1)\r\n    },[onReload])\r\n\r\n    const confirmEdit = useCallback(() => {\r\n        setIsEditOpen(false);\r\n        onReload(1);\r\n    }, [onReload])\r\n\r\n    const onDeleteUser = useCallback((id: string) => {\r\n        let payload = {}\r\n        CommonService._api.delete(ENV.API_URL + 'candidate/' + id, payload).then(() => {\r\n            init()\r\n            onReload(1)\r\n        }).catch((err)=>{\r\n            CommonService.showToast(err?.error || 'Error', 'error');\r\n        })\r\n    },[onReload,init])\r\n\r\n\r\n    const getUserDetails = useCallback((id:string)=>{\r\n        CommonService._api.get(ENV.API_URL + 'candidate/' + id).then((resp) => {\r\n           setCandidateDetails(resp?.data);\r\n           console.log(resp?.data)\r\n           openEdit()\r\n        }).catch((err)=>{\r\n            CommonService.showToast(err?.error || 'Error', 'error');\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <DialogComponent class={'dialog-side-wrapper'} open={isAddOpen} cancel={cancelAdd}>\r\n                <UserAddComponent cancel={cancelAdd} confirm={confirmAdd} />\r\n            </DialogComponent>\r\n            <DialogComponent class={'dialog-side-wrapper'} open={isEditOpen} cancel={cancelEdit}>\r\n                <UserEditComponent cancel={cancelEdit} confirm={confirmEdit} candidateDetails={candidateDetails}/>\r\n            </DialogComponent>\r\n            <div className={'user-list  screen crud-layout'}>\r\n                <Paper className=\"paper\">\r\n                    <React.Fragment>\r\n                        {list && list.table?._isDataLoading && <div className=\"table-loading-indicator\">\r\n                            <LinearProgress />\r\n                        </div>}\r\n                    </React.Fragment>\r\n                    <div className=\"header\">\r\n                        <div className=\"filter\">\r\n                            <p className=\"count\">{('Candidates')} <span className=\"table-count\">(<span id=\"txt_user_count\">{list?.table.pagination.totalItems}</span>)</span></p>\r\n                        </div>\r\n                        <div >\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"d-flex position-relative\">\r\n                            {!list?.table.filter.search?\r\n                                <div className={\"search_icon\"}>\r\n                                    <SearchIcon />\r\n                                </div>:<div className={\"search_icon\"}><ClearIcon onClick={handleClearSearch} id=\"clear_user_search\"/></div>}\r\n                                <TextField defaultValue={''} className=\"search-cursor\" id=\"input_search_user\" onChange={event => {\r\n                                    if (list && list.table) {\r\n                                        list.table.filter.search = event.target.value;\r\n                                        list.table.reload();\r\n                                        list?.table.pageEvent(0)\r\n                                        setPage(1)\r\n                                    }\r\n                                }} value={list?.table.filter.search} variant={\"outlined\"} size={\"small\"} type={'text'} placeholder={('Search Candidate')} />\r\n                               </div>\r\n                                <div>\r\n                                 <div className=\"actions\">\r\n                                    <Button variant={\"contained\"} color=\"secondary\" id=\"btn_add_user_list\" className={\"add-button\"} onClick={openAdd}>\r\n                                        <AddIcon/> &nbsp;&nbsp;{('ADD Candidate')}\r\n                                    </Button>\r\n                                </div>     \r\n                                </div>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {list && list.table && <>\r\n                        <TableContainer>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {list?.table.matColumns.map((column: any, columnIndex: any) => (\r\n                                            <TableCell\r\n                                                key={'header-col-' + columnIndex}\r\n                                                className={ \"table-left table-cell\"}\r\n                                            >\r\n                                                {(column)}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {list?.table.data.map((row: any, rowIndex: any) => {\r\n                                        // console.log(row);\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={'row-' + rowIndex} className=\"table-row\">\r\n                                                <TableCell>\r\n                                                {row['uid']}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                <p className=\"user-name\">{row['name']?.length>25?row['name']?.slice(0,25)+\"...\":row['name']}</p>\r\n                                                <p className=\"hide over-flow\">{row['name']}</p>\r\n\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row['email']}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row['phone']}\r\n                                                </TableCell>\r\n                                                 <TableCell>\r\n                                                    {row['position']}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Button id=\"btn_edit_user_list\" className={\"edit-button\"} onClick={()=>getUserDetails(row[\"_id\"])}>\r\n                                                        <EditIcon/>\r\n                                                    </Button>&nbsp;\r\n                                                    <Button id=\"btn_delete_user_list\" className={\"delete-button\"} onClick={() => onDeleteUser(row[\"_id\"])}>\r\n                                                        <DeleteIcon/>\r\n                                                    </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <div className=\"no-data\">\r\n                                {\r\n                                  !list.table?._isDataLoading && list?.table.data.length === 0 && <><h1>{('No Users added')}</h1><img src={no_data} alt=\"\" /></>\r\n                                }\r\n                                </div>\r\n                        </TableContainer>\r\n                    </>\r\n                    }\r\n                </Paper>\r\n                <Pagination className={\"pagination\"} count={list?.table?.pagination?.totalItems  ? Math.ceil(list?.table?.pagination?.totalItems / list?.table.pagination.pageSize) : 0}\r\n                onChange={(event, pageNumber) => {list?.table.pageEvent(pageNumber - 1);\r\n                    setPage(pageNumber)}} page={page} shape=\"rounded\" color={\"primary\"} size=\"large\" />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n"]},"metadata":{},"sourceType":"module"}