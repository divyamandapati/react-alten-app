{"ast":null,"code":"const setItem = function (key) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let value = data;\n\n  if (typeof data === 'object') {\n    value = JSON.stringify(value);\n  }\n\n  return localStorage.setItem(key, value);\n};\n\nconst removeItem = key => {\n  return localStorage.removeItem(key);\n};\n\nconst clearAll = () => {\n  return new Promise(async (resolve, reject) => {\n    const asyncStorageKeys = await localStorage.getAllKeys();\n\n    if (asyncStorageKeys.length > 0) {\n      localStorage.clear();\n      resolve(null);\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nconst getItem = key => {\n  return localStorage.getItem(key);\n};\n\nconst localStore = {\n  setItem,\n  getItem,\n  removeItem,\n  clearAll\n};\nexport default localStore;","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/helpers/local-storage.ts"],"names":["setItem","key","data","value","JSON","stringify","localStorage","removeItem","clearAll","Promise","resolve","reject","asyncStorageKeys","getAllKeys","length","clear","getItem","localStore"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAACC,GAAD,EAAiC;AAAA,MAAnBC,IAAmB,uEAAP,EAAO;AAC7C,MAAIC,KAAK,GAAGD,IAAZ;;AACA,MAAI,OAAQA,IAAR,KAAkB,QAAtB,EAAgC;AAC5BC,IAAAA,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAR;AACH;;AACD,SAAOG,YAAY,CAACN,OAAb,CACHC,GADG,EAEHE,KAFG,CAAP;AAIH,CATD;;AAUA,MAAMI,UAAU,GAAIN,GAAD,IAAiB;AAChC,SAAOK,YAAY,CAACC,UAAb,CAAwBN,GAAxB,CAAP;AACH,CAFD;;AAIA,MAAMO,QAAQ,GAAG,MAAM;AACnB,SAAO,IAAIC,OAAJ,CAAiB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC/C,UAAMC,gBAAgB,GAAG,MAAMN,YAAY,CAACO,UAAb,EAA/B;;AACA,QAAID,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BR,MAAAA,YAAY,CAACS,KAAb;AACAL,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAHD,MAGO;AACHA,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;AACJ,GARM,CAAP;AASH,CAVD;;AAWA,MAAMM,OAAO,GAAIf,GAAD,IAAiB;AAC7B,SAAOK,YAAY,CAACU,OAAb,CAAqBf,GAArB,CAAP;AACH,CAFD;;AAGA,MAAMgB,UAAU,GAAG;AAACjB,EAAAA,OAAD;AAAUgB,EAAAA,OAAV;AAAmBT,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAnB;AACA,eAAeS,UAAf","sourcesContent":["const setItem = (key: string, data: any = {}) => {\r\n    let value = data;\r\n    if (typeof (data) === 'object') {\r\n        value = JSON.stringify(value);\r\n    }\r\n    return localStorage.setItem(\r\n        key,\r\n        value\r\n    );\r\n};\r\nconst removeItem = (key: string) => {\r\n    return localStorage.removeItem(key);\r\n}\r\n\r\nconst clearAll = () => {\r\n    return new Promise<any>(async (resolve, reject) => {\r\n        const asyncStorageKeys = await localStorage.getAllKeys();\r\n        if (asyncStorageKeys.length > 0) {\r\n            localStorage.clear();\r\n            resolve(null);\r\n        } else {\r\n            resolve(null);\r\n        }\r\n    })\r\n}\r\nconst getItem = (key: string) => {\r\n    return localStorage.getItem(key);\r\n}\r\nconst localStore = {setItem, getItem, removeItem, clearAll};\r\nexport default localStore;\r\n"]},"metadata":{},"sourceType":"module"}