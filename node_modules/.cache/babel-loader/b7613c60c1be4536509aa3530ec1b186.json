{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-xhr-backend';\nimport translationEn from \"./locales/english/translationEN.json\";\nimport translationTe from \"./locales/telugu/translationTE.json\";\nimport translationHi from \"./locales/hindi/translationHN.json\";\nimport translationUr from \"./locales/urdu/translationUR.json\";\nimport translationAr from \"./locales/arabic/translationAR.json\";\nimport translationTa from \"./locales/tamil/translationTA.json\";\nimport translationKn from \"./locales/kannada/translationKN.json\";\nimport translationMl from \"./locales/malyalam/translationML.json\";\nimport translationMr from \"./locales/marati/translationMR.json\";\nimport translationGu from \"./locales/gujarathi/translationGU.json\";\nimport { localStore } from \"./helpers\";\nconst resources = {\n  en: {\n    translation: translationEn\n  },\n  te: {\n    translation: translationTe\n  },\n  hi: {\n    translation: translationHi\n  },\n  ur: {\n    translation: translationUr\n  },\n  ar: {\n    translation: translationAr\n  },\n  ta: {\n    translation: translationTa\n  },\n  kn: {\n    translation: translationKn\n  },\n  ml: {\n    translation: translationMl\n  },\n  mr: {\n    translation: translationMr\n  },\n  gu: {\n    translation: translationGu\n  }\n};\nlet language = localStore.getItem('language') || 'en';\ni18n.use(Backend).use(initReactI18next).init({\n  resources,\n  fallbackLng: language,\n  debug: true,\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/divya/Documents/practice/react-alten-app/src/i18n.js"],"names":["i18n","initReactI18next","Backend","translationEn","translationTe","translationHi","translationUr","translationAr","translationTa","translationKn","translationMl","translationMr","translationGu","localStore","resources","en","translation","te","hi","ur","ar","ta","kn","ml","mr","gu","language","getItem","use","init","fallbackLng","debug","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAAQC,gBAAR,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,SAAQC,UAAR,QAA0B,WAA1B;AAEA,MAAMC,SAAS,GAAC;AACZC,EAAAA,EAAE,EAAC;AACCC,IAAAA,WAAW,EAACb;AADb,GADS;AAIZc,EAAAA,EAAE,EAAC;AACCD,IAAAA,WAAW,EAACZ;AADb,GAJS;AAOZc,EAAAA,EAAE,EAAC;AACCF,IAAAA,WAAW,EAACX;AADb,GAPS;AAUZc,EAAAA,EAAE,EAAC;AACCH,IAAAA,WAAW,EAACV;AADb,GAVS;AAaZc,EAAAA,EAAE,EAAC;AACCJ,IAAAA,WAAW,EAACT;AADb,GAbS;AAgBZc,EAAAA,EAAE,EAAC;AACCL,IAAAA,WAAW,EAACR;AADb,GAhBS;AAmBZc,EAAAA,EAAE,EAAC;AACCN,IAAAA,WAAW,EAACP;AADb,GAnBS;AAsBZc,EAAAA,EAAE,EAAC;AACCP,IAAAA,WAAW,EAACN;AADb,GAtBS;AAyBZc,EAAAA,EAAE,EAAC;AACCR,IAAAA,WAAW,EAACL;AADb,GAzBS;AA4BZc,EAAAA,EAAE,EAAC;AACCT,IAAAA,WAAW,EAACJ;AADb;AA5BS,CAAhB;AAiCA,IAAIc,QAAQ,GAACb,UAAU,CAACc,OAAX,CAAmB,UAAnB,KAAkC,IAA/C;AAEA3B,IAAI,CAAC4B,GAAL,CAAS1B,OAAT,EACC0B,GADD,CACK3B,gBADL,EACuB4B,IADvB,CAC4B;AACxBf,EAAAA,SADwB;AAExBgB,EAAAA,WAAW,EAAEJ,QAFW;AAGxBK,EAAAA,KAAK,EAAE,IAHiB;AAKxBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AALS,CAD5B;AAWA,eAAejC,IAAf","sourcesContent":["import i18n from \"i18next\"\r\nimport {initReactI18next} from \"react-i18next\"\r\nimport Backend from 'i18next-xhr-backend';\r\nimport translationEn from \"./locales/english/translationEN.json\"\r\nimport translationTe from \"./locales/telugu/translationTE.json\"\r\nimport translationHi from \"./locales/hindi/translationHN.json\"\r\nimport translationUr from \"./locales/urdu/translationUR.json\"\r\nimport translationAr from \"./locales/arabic/translationAR.json\"\r\nimport translationTa from \"./locales/tamil/translationTA.json\"\r\nimport translationKn from \"./locales/kannada/translationKN.json\"\r\nimport translationMl from \"./locales/malyalam/translationML.json\"\r\nimport translationMr from \"./locales/marati/translationMR.json\"\r\nimport translationGu from \"./locales/gujarathi/translationGU.json\"\r\n\r\nimport {localStore } from \"./helpers\";\r\n\r\nconst resources={\r\n    en:{\r\n        translation:translationEn\r\n    },\r\n    te:{\r\n        translation:translationTe\r\n    },\r\n    hi:{\r\n        translation:translationHi\r\n    },\r\n    ur:{\r\n        translation:translationUr\r\n    },\r\n    ar:{\r\n        translation:translationAr\r\n    },\r\n    ta:{\r\n        translation:translationTa\r\n    },\r\n    kn:{\r\n        translation:translationKn\r\n    },\r\n    ml:{\r\n        translation:translationMl\r\n    },\r\n    mr:{\r\n        translation:translationMr\r\n    },\r\n    gu:{\r\n        translation:translationGu\r\n    }\r\n}\r\n\r\nlet language=localStore.getItem('language') || 'en'\r\n\r\ni18n.use(Backend)\r\n.use(initReactI18next).init({\r\n    resources,\r\n    fallbackLng: language,\r\n    debug: true,\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    }\r\n})\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}